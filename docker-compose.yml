services:
  db:
    image: postgres:16
    container_name: food_delivery_db
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:10
    command: >
      -url=jdbc:postgresql://db:5432/app_db 
      -user=app_user 
      -password=secret 
      -locations=filesystem:/flyway/sql
      -baselineOnMigrate=true
      migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  redis:
    image: redis:7-alpine
    container_name: food_delivery_redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: auth-service
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - db
      - flyway
      - redis
  user:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: user-service
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      - db
      - flyway
      - redis

  promo_code:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: promoCode-service
    env_file:
      - .env
    ports:
      - "8082:8082"
    depends_on:
      - db
      - flyway
      - redis

  restaurant:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: restaurant-service
    env_file:
      - .env
    ports:
      - "8083:8083"
    depends_on:
      - db
      - flyway
      - redis